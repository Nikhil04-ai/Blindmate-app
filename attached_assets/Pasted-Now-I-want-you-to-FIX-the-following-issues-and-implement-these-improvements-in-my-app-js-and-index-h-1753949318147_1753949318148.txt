Now I want you to FIX the following issues and implement these improvements in my app.js and index.html (no database should be used):

🚨 1. Add Auto Re-Routing If User Goes Off-Path

Issue: User might turn wrong, but app doesn't re-calculate route

What to Do:

Use navigator.geolocation.watchPosition() to continuously monitor user’s location every few seconds

After initial directions are loaded, compare user’s live position with the next expected coordinate

If the user is more than 15 meters away from the expected route:
→ Speak: “You’ve moved off the route, recalculating…”
→ Re-call Directions API with current location
→ Re-speak new instructions

Add a function:
function monitorPosition(expectedPath) {
watchPosition(); compare current lat/lng with next step; re-navigate if too far
}

🧭 2. Add Location Error Handling (for GPS)

Issue: If location access is denied or fails, app crashes silently

What to Do:

Wrap navigator.geolocation.getCurrentPosition() in a try/catch or pass in an error callback

If error.code === 1 → User denied permission

Use alert() or speechSynthesis to say:
“Location access is required. Please enable GPS in your browser settings.”

Also display a <div> message like:

<div id="error-message">Location access is off</div>
✅ 3. Allow Saving Location in LocalStorage (No Database)

Issue: Only hardcoded locations (library, stairs, etc.)

What to Do:

When user says: “Save this location as hostel” → Gemini returns:
{ action: "save_location", place_name: "hostel" }

Get user’s current lat/lng

Save to localStorage:
localStorage.setItem("hostel", JSON.stringify({lat:..., lng:...}))

Later, when user says: “Navigate to hostel”
→ Check if destination in hardcoded list
→ If not, check localStorage using:
const data = JSON.parse(localStorage.getItem("hostel"))

✅ 4. Add UI Feedback on Command Execution

Issue: App doesn’t tell what action it’s performing (silent)

What to Do:

Add a <div id="status"></div> in index.html near the camera

In app.js:

When Gemini command is “navigate”, update the text:
document.getElementById("status").innerText = "Now navigating to canteen…"

When rerouting → Update text to: "Re-routing..."

On error → Show: "Navigation failed."

Also optionally speak it aloud using Web Speech API.

📦 Summary:

app.js:

Add watchPosition() + rerouting logic

Wrap location calls with error handling

Add localStorage set/get for new places

Update DOM with action status

index.html:

Add #status and #error-message placeholder elements