I want you to **remove all OpenRouteService (ORS) code** from both backend and frontend.  
Replace the navigation system so it uses ONLY the Google Directions API and Google Geocoding API.  
I will provide my Google API key as an environment variable named GOOGLE_MAPS_API_KEY.

Here’s exactly what you need to do:

1. **Backend (Flask)**
   - Remove all ORS-related functions (`await_geocode_location`, `await_get_ors_directions`, etc.).
   - Create a new `/api/directions` POST endpoint that:
       a. Reads JSON body with `origin` and `destination` (origin will be lat,lng from browser).
       b. If destination is a text address (e.g., "hospital"), first call Google Geocoding API to get lat,lng.
       c. Call Google Directions API with:
          ```
          https://maps.googleapis.com/maps/api/directions/json?origin={lat,lng}&destination={lat,lng}&mode=walking&key=GOOGLE_MAPS_API_KEY
          ```
       d. Parse the `steps` array and return a clean JSON with:
          - step_number, instruction (HTML removed), distance, duration, start_location, end_location.
       e. Handle errors: if ZERO_RESULTS or API error, return `{ success: false, message: "Location not found" }`.

2. **Frontend (JavaScript)**
   - On user voice command (e.g., "Navigate to hospital"):
       a. Get current location using `navigator.geolocation.watchPosition` (not getCurrentPosition).
       b. Send current coords and the spoken destination to `/api/directions`.
       c. Display the route on a simple map (Google Maps JavaScript API).
       d. For each step in the returned JSON:
           - Use `speechSynthesis.speak()` to read the instruction aloud.
           - Trigger next step voice only when GPS detects user is near step’s start location.
   - Show error messages if API returns no route.

3. **General Fixes**
   - Ensure all API requests are `fetch` with `.catch()` error handling.
   - Use a loading state while fetching directions.
   - Keep navigation updating live as the user moves.

4. **Testing**
   - Test with both exact addresses and general place names.
   - Make sure the navigation works for *any* location available on Google Maps, not just predefined spots.

The end result:
- Voice command like “Take me to Delhi Railway Station” → app gets current GPS → geocodes destination → fetches walking route → speaks turn-by-turn navigation → keeps updating as user moves.

Use my API key from process.env.GOOGLE_MAPS_API_KEY